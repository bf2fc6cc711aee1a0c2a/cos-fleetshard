/**
* {{description}}{{^description}}{{classname}}{{/description}}{{#isDeprecated}}
    * @deprecated{{/isDeprecated}}
*/{{#isDeprecated}}
    @Deprecated{{/isDeprecated}}{{#description}}
    @ApiModel(description = "{{{.}}}"){{/description}}
{{#jackson}}
    @JsonPropertyOrder({
    {{#vars}}
        {{classname}}.JSON_PROPERTY_{{nameInSnakeCase}}{{#deprecated}}_DEPRECATED{{/deprecated}}{{^-last}},{{/-last}}
    {{/vars}}
    })
    @JsonTypeName("{{name}}{{#deprecated}}Deprecated{{/deprecated}}")
{{/jackson}}
{{>additionalModelTypeAnnotations}}{{>generatedAnnotation}}{{#discriminator}}{{>typeInfoAnnotation}}{{/discriminator}}{{>xmlAnnotation}}
public class {{classname}} {{#parent}}extends {{{.}}} {{/parent}}{{#vendorExtensions.x-implements}}{{#-first}}implements {{{.}}}{{/-first}}{{^-first}}, {{{.}}}{{/-first}}{{#-last}} {{/-last}}{{/vendorExtensions.x-implements}}{
{{#serializableModel}}
    private static final long serialVersionUID = 1L;

{{/serializableModel}}
{{#vars}}
    {{#isEnum}}
        {{^isContainer}}
            {{>modelInnerEnum}}
        {{/isContainer}}
        {{#isContainer}}
            {{#mostInnerItems}}
                {{>modelInnerEnum}}
            {{/mostInnerItems}}
        {{/isContainer}}
    {{/isEnum}}
    {{#gson}}
        public static final String SERIALIZED_NAME_{{nameInSnakeCase}}{{#deprecated}}_DEPRECATED{{/deprecated}} = "{{baseName}}";
    {{/gson}}
    {{#jackson}}
        public static final String JSON_PROPERTY_{{nameInSnakeCase}}{{#deprecated}}_DEPRECATED{{/deprecated}} = "{{baseName}}";
    {{/jackson}}
    {{#withXml}}
        {{#isXmlAttribute}}
            @XmlAttribute(name = "{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}")
        {{/isXmlAttribute}}
        {{^isXmlAttribute}}
            {{^isContainer}}
                @XmlElement({{#xmlNamespace}}namespace="{{.}}", {{/xmlNamespace}}name = "{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}")
            {{/isContainer}}
            {{#isContainer}}
                // Is a container wrapped={{isXmlWrapped}}
                {{#items}}
                    // items.name={{name}}{{#deprecated}}Deprecated{{/deprecated}} items.baseName={{baseName}} items.xmlName={{xmlName}} items.xmlNamespace={{xmlNamespace}}
                    // items.example={{example}} items.type={{dataType}}
                    @XmlElement({{#xmlNamespace}}namespace="{{.}}", {{/xmlNamespace}}name = "{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}")
                {{/items}}
                {{#isXmlWrapped}}
                    @XmlElementWrapper({{#xmlNamespace}}namespace="{{.}}", {{/xmlNamespace}}name = "{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}")
                {{/isXmlWrapped}}
            {{/isContainer}}
        {{/isXmlAttribute}}
    {{/withXml}}
    {{#gson}}
        @SerializedName(SERIALIZED_NAME_{{nameInSnakeCase}}{{#deprecated}}_DEPRECATED{{/deprecated}})
    {{/gson}}
    {{#vendorExtensions.x-is-jackson-optional-nullable}}
        {{#isContainer}}
            private JsonNullable<{{{datatypeWithEnum}}}> {{name}}{{#deprecated}}Deprecated{{/deprecated}} = JsonNullable.<{{{datatypeWithEnum}}}>undefined();
        {{/isContainer}}
        {{^isContainer}}
            private JsonNullable<{{{datatypeWithEnum}}}> {{name}}{{#deprecated}}Deprecated{{/deprecated}} = JsonNullable.<{{{datatypeWithEnum}}}>{{#defaultValue}}of({{{.}}}){{/defaultValue}}{{^defaultValue}}undefined(){{/defaultValue}};
        {{/isContainer}}
    {{/vendorExtensions.x-is-jackson-optional-nullable}}
    {{^vendorExtensions.x-is-jackson-optional-nullable}}
        {{#isContainer}}
            private {{{datatypeWithEnum}}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}{{#required}}{{#defaultValue}} = {{{.}}}{{/defaultValue}}{{/required}}{{^required}} = null{{/required}};
        {{/isContainer}}
        {{^isContainer}}
            {{#isDiscriminator}}protected{{/isDiscriminator}}{{^isDiscriminator}}private{{/isDiscriminator}} {{{datatypeWithEnum}}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}{{#defaultValue}} = {{{.}}}{{/defaultValue}};
        {{/isContainer}}
    {{/vendorExtensions.x-is-jackson-optional-nullable}}

{{/vars}}
public {{classname}}() { {{#parent}}{{#parcelableModel}}
    super();{{/parcelableModel}}{{/parent}}{{#gson}}{{#discriminator}}
    this.{{{discriminatorName}}} = this.getClass().getSimpleName();{{/discriminator}}{{/gson}}
}{{#vendorExtensions.x-has-readonly-properties}}{{^withXml}}

    {{#jsonb}}@JsonbCreator{{/jsonb}}{{#jackson}}@JsonCreator{{/jackson}}
    public {{classname}}(
    {{#readOnlyVars}}
        {{#jsonb}}@JsonbProperty("{{baseName}}"){{/jsonb}}{{#jackson}}@JsonProperty(JSON_PROPERTY_{{nameInSnakeCase}}){{/jackson}} {{{datatypeWithEnum}}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}{{^-last}}, {{/-last}}
    {{/readOnlyVars}}
    ) {
    this();
    {{#readOnlyVars}}
        this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = {{name}}{{#deprecated}}Deprecated{{/deprecated}};
    {{/readOnlyVars}}
    }{{/withXml}}{{/vendorExtensions.x-has-readonly-properties}}
{{#vars}}

    {{^isReadOnly}}
        public {{classname}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}({{{datatypeWithEnum}}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}) {
        {{#vendorExtensions.x-is-jackson-optional-nullable}}this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{name}}{{#deprecated}}Deprecated{{/deprecated}});{{/vendorExtensions.x-is-jackson-optional-nullable}}
        {{^vendorExtensions.x-is-jackson-optional-nullable}}this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = {{name}}{{#deprecated}}Deprecated{{/deprecated}};{{/vendorExtensions.x-is-jackson-optional-nullable}}
        return this;
        }
        {{#isArray}}

            public {{classname}} add{{nameInCamelCase}}{{#deprecated}}Deprecated{{/deprecated}}Item({{{items.datatypeWithEnum}}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}Item) {
            {{#vendorExtensions.x-is-jackson-optional-nullable}}
                if (this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} == null || !this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}.isPresent()) {
                this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{{defaultValue}}});
                }
                try {
                this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}.get().add({{name}}{{#deprecated}}Deprecated{{/deprecated}}Item);
                } catch (java.util.NoSuchElementException e) {
                // this can never happen, as we make sure above that the value is present
                }
                return this;
            {{/vendorExtensions.x-is-jackson-optional-nullable}}
            {{^vendorExtensions.x-is-jackson-optional-nullable}}
                {{^required}}
                    if (this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} == null) {
                    this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = {{{defaultValue}}};
                    }
                {{/required}}
                this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}.add({{name}}{{#deprecated}}Deprecated{{/deprecated}}Item);
                return this;
            {{/vendorExtensions.x-is-jackson-optional-nullable}}
            }
        {{/isArray}}
        {{#isMap}}

            public {{classname}} put{{nameInCamelCase}}{{#deprecated}}Deprecated{{/deprecated}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}Item) {
            {{#vendorExtensions.x-is-jackson-optional-nullable}}
                if (this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} == null || !this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}.isPresent()) {
                this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{{defaultValue}}});
                }
                try {
                this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}.get().put(key, {{name}}{{#deprecated}}Deprecated{{/deprecated}}Item);
                } catch (java.util.NoSuchElementException e) {
                // this can never happen, as we make sure above that the value is present
                }
                return this;
            {{/vendorExtensions.x-is-jackson-optional-nullable}}
            {{^vendorExtensions.x-is-jackson-optional-nullable}}
                {{^required}}
                    if (this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} == null) {
                    this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = {{{defaultValue}}};
                    }
                {{/required}}
                this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}.put(key, {{name}}{{#deprecated}}Deprecated{{/deprecated}}Item);
                return this;
            {{/vendorExtensions.x-is-jackson-optional-nullable}}
            }
        {{/isMap}}

    {{/isReadOnly}}
    /**
    {{#description}}
        * {{.}}
    {{/description}}
    {{^description}}
        * Get {{name}}{{#deprecated}}Deprecated{{/deprecated}}
    {{/description}}
    {{#minimum}}
        * minimum: {{.}}
    {{/minimum}}
    {{#maximum}}
        * maximum: {{.}}
    {{/maximum}}
    * @return {{name}}{{#deprecated}}Deprecated{{/deprecated}}
    {{#deprecated}}
        * @deprecated
    {{/deprecated}}
    **/
    {{#deprecated}}
        @Deprecated
    {{/deprecated}}
    {{#required}}
        {{#isNullable}}
            @javax.annotation.Nullable
        {{/isNullable}}
        {{^isNullable}}
            @javax.annotation.Nonnull
        {{/isNullable}}
    {{/required}}
    {{^required}}
        @javax.annotation.Nullable
    {{/required}}
    {{#jsonb}}
        @JsonbProperty("{{baseName}}")
    {{/jsonb}}
    {{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}  @ApiModelProperty({{#example}}example = "{{{.}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}value = "{{{description}}}")
    {{#vendorExtensions.x-extra-annotation}}
        {{{vendorExtensions.x-extra-annotation}}}
    {{/vendorExtensions.x-extra-annotation}}
    {{#vendorExtensions.x-is-jackson-optional-nullable}}
    {{!unannotated, Jackson would pick this up automatically and add it *in addition* to the _JsonNullable getter field}}
        @JsonIgnore
    {{/vendorExtensions.x-is-jackson-optional-nullable}}
    {{^vendorExtensions.x-is-jackson-optional-nullable}}{{#jackson}}{{> jackson_annotations}}{{/jackson}}{{/vendorExtensions.x-is-jackson-optional-nullable}}
    public {{{datatypeWithEnum}}} {{getter}}{{#deprecated}}Deprecated{{/deprecated}}() {
    {{#vendorExtensions.x-is-jackson-optional-nullable}}
        {{#isReadOnly}}{{! A readonly attribute doesn't have setter => jackson will set null directly if explicitly returned by API, so make sure we have an empty JsonNullable}}
            if ({{name}}{{#deprecated}}Deprecated{{/deprecated}} == null) {
            {{name}}{{#deprecated}}Deprecated{{/deprecated}} = JsonNullable.<{{{datatypeWithEnum}}}>{{#defaultValue}}of({{{.}}}){{/defaultValue}}{{^defaultValue}}undefined(){{/defaultValue}};
            }
        {{/isReadOnly}}
        return {{name}}{{#deprecated}}Deprecated{{/deprecated}}.orElse(null);
    {{/vendorExtensions.x-is-jackson-optional-nullable}}
    {{^vendorExtensions.x-is-jackson-optional-nullable}}
        return {{name}}{{#deprecated}}Deprecated{{/deprecated}};
    {{/vendorExtensions.x-is-jackson-optional-nullable}}
    }

    {{#vendorExtensions.x-is-jackson-optional-nullable}}
        {{> jackson_annotations}}
        public JsonNullable<{{{datatypeWithEnum}}}> {{getter}}{{#deprecated}}Deprecated{{/deprecated}}_JsonNullable() {
        return {{name}}{{#deprecated}}Deprecated{{/deprecated}};
        }
    {{/vendorExtensions.x-is-jackson-optional-nullable}}{{#vendorExtensions.x-is-jackson-optional-nullable}}
        @JsonProperty(JSON_PROPERTY_{{nameInSnakeCase}})
        {{#isReadOnly}}private{{/isReadOnly}}{{^isReadOnly}}public{{/isReadOnly}} void {{setter}}{{#deprecated}}Deprecated{{/deprecated}}_JsonNullable(JsonNullable<{{{datatypeWithEnum}}}> {{name}}{{#deprecated}}Deprecated{{/deprecated}}) {
        {{! For getters/setters that have name differing from attribute name, we must include setter (albeit private) for jackson to be able to set the attribute}}
        this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = {{name}}{{#deprecated}}Deprecated{{/deprecated}};
        }
    {{/vendorExtensions.x-is-jackson-optional-nullable}}

    {{^isReadOnly}}
        {{#vendorExtensions.x-setter-extra-annotation}}  {{{vendorExtensions.x-setter-extra-annotation}}}
        {{/vendorExtensions.x-setter-extra-annotation}}{{#jackson}}{{^vendorExtensions.x-is-jackson-optional-nullable}}{{> jackson_annotations}}{{/vendorExtensions.x-is-jackson-optional-nullable}}{{/jackson}}  public void {{setter}}{{#deprecated}}Deprecated{{/deprecated}}({{{datatypeWithEnum}}} {{name}}{{#deprecated}}Deprecated{{/deprecated}}) {
        {{#vendorExtensions.x-is-jackson-optional-nullable}}
            this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = JsonNullable.<{{{datatypeWithEnum}}}>of({{name}}{{#deprecated}}Deprecated{{/deprecated}});
        {{/vendorExtensions.x-is-jackson-optional-nullable}}
        {{^vendorExtensions.x-is-jackson-optional-nullable}}
            this.{{name}}{{#deprecated}}Deprecated{{/deprecated}} = {{name}}{{#deprecated}}Deprecated{{/deprecated}};
        {{/vendorExtensions.x-is-jackson-optional-nullable}}
        }
    {{/isReadOnly}}

{{/vars}}

@Override
public boolean equals(Object o) {
{{#useReflectionEqualsHashCode}}
    return EqualsBuilder.reflectionEquals(this, o, false, null, true);
{{/useReflectionEqualsHashCode}}
{{^useReflectionEqualsHashCode}}
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }{{#hasVars}}
        {{classname}} {{classVarName}} = ({{classname}}) o;
        return {{#vars}}{{#vendorExtensions.x-is-jackson-optional-nullable}}equalsNullable(this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}, {{classVarName}}.{{name}}{{#deprecated}}Deprecated{{/deprecated}}){{/vendorExtensions.x-is-jackson-optional-nullable}}{{^vendorExtensions.x-is-jackson-optional-nullable}}{{#isByteArray}}Arrays{{/isByteArray}}{{^isByteArray}}Objects{{/isByteArray}}.equals(this.{{name}}{{#deprecated}}Deprecated{{/deprecated}}, {{classVarName}}.{{name}}{{#deprecated}}Deprecated{{/deprecated}}){{/vendorExtensions.x-is-jackson-optional-nullable}}{{^-last}} &&
        {{/-last}}{{/vars}}{{#parent}} &&
        super.equals(o){{/parent}};{{/hasVars}}{{^hasVars}}
        return {{#parent}}super.equals(o){{/parent}}{{^parent}}true{{/parent}};{{/hasVars}}
{{/useReflectionEqualsHashCode}}
}{{#vendorExtensions.x-jackson-optional-nullable-helpers}}

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
        }{{/vendorExtensions.x-jackson-optional-nullable-helpers}}

    @Override
    public int hashCode() {
{{#useReflectionEqualsHashCode}}
        return HashCodeBuilder.reflectionHashCode(this);
{{/useReflectionEqualsHashCode}}
{{^useReflectionEqualsHashCode}}
        return Objects.hash({{#vars}}{{#vendorExtensions.x-is-jackson-optional-nullable}}hashCodeNullable({{name}}{{#deprecated}}Deprecated{{/deprecated}}){{/vendorExtensions.x-is-jackson-optional-nullable}}{{^vendorExtensions.x-is-jackson-optional-nullable}}{{^isByteArray}}{{name}}{{#deprecated}}Deprecated{{/deprecated}}{{/isByteArray}}{{#isByteArray}}Arrays.hashCode({{name}}{{#deprecated}}Deprecated{{/deprecated}}){{/isByteArray}}{{/vendorExtensions.x-is-jackson-optional-nullable}}{{^-last}}, {{/-last}}{{/vars}}{{#parent}}{{#hasVars}}, {{/hasVars}}super.hashCode(){{/parent}});
{{/useReflectionEqualsHashCode}}
    }{{#vendorExtensions.x-jackson-optional-nullable-helpers}}

        private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
        return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
        }{{/vendorExtensions.x-jackson-optional-nullable-helpers}}

    @Override
    public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class {{classname}} {\n");
{{#parent}}
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
{{/parent}}
{{#vars}}
        sb.append("    {{name}}{{#deprecated}}Deprecated{{/deprecated}}: ").append(toIndentedString({{name}}{{#deprecated}}Deprecated{{/deprecated}})).append("\n");
{{/vars}}
    sb.append("}");
    return sb.toString();
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private{{#jsonb}} static{{/jsonb}} String toIndentedString(Object o) {
    if (o == null) {
    return "null";
    }
    return o.toString().replace("\n", "\n    ");
    }

{{#parcelableModel}}

        public void writeToParcel(Parcel out, int flags) {
    {{#model}}
        {{#isArray}}
                out.writeList(this);
        {{/isArray}}
        {{^isArray}}
            {{#parent}}
                    super.writeToParcel(out, flags);
            {{/parent}}
            {{#vars}}
                    out.writeValue({{name}}{{#deprecated}}Deprecated{{/deprecated}});
            {{/vars}}
        {{/isArray}}
    {{/model}}
        }

    {{classname}}(Parcel in) {
    {{#isArray}}
            in.readTypedList(this, {{arrayModelType}}.CREATOR);
    {{/isArray}}
    {{^isArray}}
        {{#parent}}
                super(in);
        {{/parent}}
        {{#vars}}
            {{#isPrimitiveType}}
                {{name}}{{#deprecated}}Deprecated{{/deprecated}} = ({{{datatypeWithEnum}}})in.readValue(null);
            {{/isPrimitiveType}}
            {{^isPrimitiveType}}
                {{name}}{{#deprecated}}Deprecated{{/deprecated}} = ({{{datatypeWithEnum}}})in.readValue({{complexType}}.class.getClassLoader());
            {{/isPrimitiveType}}
        {{/vars}}
    {{/isArray}}
        }

        public int describeContents() {
        return 0;
        }

        public static final Parcelable.Creator<{{classname}}> CREATOR = new Parcelable.Creator<{{classname}}>() {
        public {{classname}} createFromParcel(Parcel in) {
    {{#model}}
        {{#isArray}}
            {{classname}} result = new {{classname}}();
                result.addAll(in.readArrayList({{arrayModelType}}.class.getClassLoader()));
                return result;
        {{/isArray}}
        {{^isArray}}
                return new {{classname}}(in);
        {{/isArray}}
    {{/model}}
        }
        public {{classname}}[] newArray(int size) {
        return new {{classname}}[size];
        }
        };
{{/parcelableModel}}
    }
