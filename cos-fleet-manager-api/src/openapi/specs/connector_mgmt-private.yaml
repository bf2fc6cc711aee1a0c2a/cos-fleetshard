openapi: 3.0.0 # need this as first line to allow some IDEs to know this is an openapi document.
# Warning: This file should only be used if the endpoints are not yet ready to be public, or not suitable for public consumption (like the data plane endpoints).
# In most cases, you shouldn't need to add the endpoints here.
# Only add endpoints here when it is an explicit requirement, or if you know what you are doing.
# There should be no duplicated endpoints or schemas in these 2 files. They should only defined in one of them.
info:
  title: Connector Service Fleet Manager Private APIs
  version: 0.0.3
  description: Connector Service Fleet Manager apis that are used by internal services.
servers:
  - url: https://api.openshift.com
    description: Main (production) server
  - url: https://api.stage.openshift.com
    description: Staging server
  - url: http://localhost:8000
    description: localhost
  - url: /
    description: current domain
tags:
  - name: Connector Clusters Agent
    description: "only accessible by connector fleet shard agents"

paths:
  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/status':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
    put:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: updateKafkaConnectorClusterStatus
      summary: Update the status of a connector cluster
      description: Update the status of a connector cluster
      requestBody:
        description: Cluster status update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorClusterStatus'
        required: true
      responses:
        '200':
          description: Cluster status is updated
        '400':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.

  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
    get:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: getClusterAsignedConnectorDeployments
      summary: Returns a list of connector deployments assigned to the cluster.
      description: Returns a list of connector deployments assigned to the cluster.
      parameters:
        - $ref: 'connector_mgmt.yaml#/components/parameters/page'
        - $ref: 'connector_mgmt.yaml#/components/parameters/size'
        - in: query
          name: gt_version
          description: filters the connectors to those with a version greater than the given value
          schema:
            type: integer
            format: int64
        - in: query
          name: watch
          description: watch for changes to the resources and return them as a stream of watch events. Specify gt_version to specify the starting point.
          schema:
            type: string

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/ConnectorDeploymentWatchEvent'
          description: A list of connector
        '401':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                401Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'
          description: Auth token is invalid
        '500':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                500Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'
          description: Unexpected error occurred

  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
      - name: deployment_id
        description: The id of the deployment
        schema:
          type: string
        in: path
        required: true
    get:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: getClusterAsignedConnectorDeploymentById
      summary: Returns a list of connector deployments assigned to the cluster.
      description: Returns a list of connector deployments assigned to the cluster.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDeployment'
          description: A connector deployment
        '401':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                401Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'
          description: Auth token is invalid
        '410':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
          description: deployment has been deleted
        '500':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                500Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'
          description: Unexpected error occurred

  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}/status':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
      - name: deployment_id
        description: The id of the deployment
        schema:
          type: string
        in: path
        required: true
    put:
      tags:
        - Connector Clusters Agent
      operationId: updateConnectorDeploymentStatus
      summary: update the connector deployment status
      description: update the connector deployment status
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorDeploymentStatus'
        required: true
      responses:
        '200':
          description: Cluster status is updated
        '400':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                400InvalidIdExample:
                  $ref: '#/components/examples/400InvalidIdExample'
          description: id value is not valid
        '404':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                404Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/404Example'
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
        '410':
          description: deployment has been deleted
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'

  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
      - $ref: 'connector_mgmt.yaml#/components/parameters/page'
      - $ref: 'connector_mgmt.yaml#/components/parameters/size'
      - in: query
        name: gt_version
        description: filters the connectors to those with a version greater than the given value
        schema:
          type: integer
          format: int64
    get:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: getClusterAsignedConnectorNamespaces
      summary: Returns all connector namespaces assigned to the cluster.
      description: Returns all connector namespaces assigned to the cluster.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorNamespaceList'
          description: All connector namespaces in cluster
        '401':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                401Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'
          description: Auth token is invalid
        '410':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
          description: cluster has been deleted
        '500':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                500Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'
          description: Unexpected error occurred

  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces/{namespace_id}':
    parameters:
      - name: connector_cluster_id
        description: The id of the connector cluster
        schema:
          type: string
        in: path
        required: true
      - name: namespace_id
        description: The id of the namespace
        schema:
          type: string
        in: path
        required: true
    get:
      tags:
        - Connector Clusters Agent
      security:
        - Bearer: [ ]
      operationId: getClusterAsignedConnectorNamespaceById
      summary: Returns a connector namespace assigned to the cluster.
      description: Returns a connector namespace assigned to the cluster.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorNamespace'
          description: A connector namespace
        '401':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                401Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'
          description: Auth token is invalid
        '410':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
          description: namespace has been deleted
        '500':
          content:
            application/json:
              schema:
                $ref: 'connector_mgmt.yaml#/components/schemas/Error'
              examples:
                500Example:
                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'
          description: Unexpected error occurred

components:
  schemas:

    MetaV1Condition:
      type: object
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
        lastTransitionTime:
          type: string
          deprecated: true
        last_transition_time:
          type: string
          #format: date-time # enable this?? or just set it as pure plain string?

    WatchEvent:
      required:
        - type
      type: object
      properties:
        type:
          type: string
        error:
          nullable: true
          $ref: "connector_mgmt.yaml#/components/schemas/Error"
        object:
          type: object
          nullable: true

    ConnectorDeployment:
      description: Holds the deployment configuration of a connector
      allOf:
        - $ref: 'connector_mgmt.yaml#/components/schemas/ObjectReference'
        - type: object
          properties:
            metadata:
              type: object
              properties:
                created_at:
                  format: date-time
                  type: string
                updated_at:
                  format: date-time
                  type: string
                resource_version:
                  type: integer
                  format: int64
            spec:
              $ref: '#/components/schemas/ConnectorDeploymentSpec'
            status:
              $ref: '#/components/schemas/ConnectorDeploymentStatus'

    ConnectorDeploymentSpec:
      description: Holds the deployment specification of a connector
      type: object
      properties:
        service_account:
          $ref: 'connector_mgmt.yaml#/components/schemas/ServiceAccount'
        kafka:
          $ref: 'connector_mgmt.yaml#/components/schemas/KafkaConnectionSettings'
        schema_registry:
          $ref: "connector_mgmt.yaml#/components/schemas/SchemaRegistryConnectionSettings"
        connector_id:
          type: string
        connector_resource_version:
          type: integer
          format: int64
        connector_type_id:
          type: string
        namespace_id:
          type: string
        connector_spec:
          type: object
        allow_upgrade:
          description: allow the connector to upgrade to a new operator
          type: boolean
          deprecated: true
        operator_id:
          description: an optional operator id that the connector should be run under.
          type: string
        desired_state:
          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorDesiredState'
        shard_metadata:
          type: object

    ConnectorDeploymentStatus:
      description: The status of connector deployment
      type: object
      properties:
        phase:
          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorState'
        resource_version:
          type: integer
          format: int64
        available_upgrades:
          type: string
          deprecated: true
        operators:
          type: object
          properties:
            assigned:
              $ref: '#/components/schemas/ConnectorOperator'
            available:
              $ref: '#/components/schemas/ConnectorOperator'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/MetaV1Condition'

    ConnectorDeploymentList:
      allOf:
        - $ref: 'connector_mgmt.yaml#/components/schemas/List'
        - type: object
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ConnectorDeployment'

    ConnectorDeploymentWatchEvent:
      allOf:
        - $ref: '#/components/schemas/WatchEvent'
        - type: object
          properties:
            object:
              $ref: '#/components/schemas/ConnectorDeployment'

    ConnectorOperator:
      description: identifies an operator that runs on the fleet shards used to manage connectors.
      properties:
        id:
          description: the id of the operator
          type: string
        type:
          description: the type of the operator
          type: string
        version:
          description: the version of the operator
          type: string

    ConnectorNamespaceStatus:
      description: "Schema for the request to update a data plane namespaces' status"
      type: object
      required:
        - id
        - phase
        - version
        - connectors_deployed
      properties:
        id:
          type: string
        phase:
          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorNamespaceState'
        version:
          type: string
        connectors_deployed:
          type: integer
          format: int32
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/MetaV1Condition'

    ConnectorClusterStatus:
      description: "Schema for the request to update a data plane cluster's status"
      type: object
      properties:
        phase:
          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorClusterState'
        version:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/MetaV1Condition'
        operators:
          description: the list of installed operators
          type: array
          items:
            type: object
            properties:
              operator:
                $ref: '#/components/schemas/ConnectorOperator'
              namespace:
                description: the namespace to which the operator has been installed
                type: string
              status:
                description: the status of the operator
                type: string
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorNamespaceStatus'

  securitySchemes:
    Bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http

  examples:
    400InvalidIdExample:
      value:
        id: "21"
        kind: "Error"
        href: "/api/kafkas_mgmt/v1/errors/21"
        code: "KAFKAS-MGMT-21"
        reason: "Bad request"
        operation_id: "1lWDGuybIrEnxrAem724gqkkiDv"