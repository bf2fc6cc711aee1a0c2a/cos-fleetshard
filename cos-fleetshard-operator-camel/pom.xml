<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <parent>
        <groupId>org.bf2</groupId>
        <artifactId>cos-fleetshard</artifactId>
        <version>999-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>cos-fleetshard-operator-camel</artifactId>
    <packaging>jar</packaging>

    <properties>
        <!-- CRD -->
        <quarkus.kubernetes.part-of>cos</quarkus.kubernetes.part-of>
        <quarkus.kubernetes.app-config-map>${project.artifactId}-config</quarkus.kubernetes.app-config-map>
        <quarkus.kubernetes.add-build-timestamp>false</quarkus.kubernetes.add-build-timestamp>
        <quarkus.openshift.add-build-timestamp>false</quarkus.openshift.add-build-timestamp>

        <!-- operator sdk -->
        <quarkus.operator-sdk.crd.generate>false</quarkus.operator-sdk.crd.generate>
        <quarkus.operator-sdk.crd.validate>false</quarkus.operator-sdk.crd.validate>
        <quarkus.operator-sdk.crd.apply>false</quarkus.operator-sdk.crd.apply>

        <!-- kubernetes -->
        <quarkus.kubernetes-config.enabled>false</quarkus.kubernetes-config.enabled>
        <quarkus.kubernetes-config.secrets.enabled>false</quarkus.kubernetes-config.secrets.enabled>

        <!-- container image -->
        <quarkus.container-image.build>false</quarkus.container-image.build>
        <quarkus.container-image.registry>quay.io</quarkus.container-image.registry>
        <quarkus.container-image.group>rhoas</quarkus.container-image.group>
        <quarkus.container-image.name>${project.artifactId}</quarkus.container-image.name>
        <quarkus.container-image.tag>latest</quarkus.container-image.tag>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.sundr</groupId>
            <artifactId>builder-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>org.bf2</groupId>
            <artifactId>cos-fleet-manager-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bf2</groupId>
            <artifactId>cos-fleetshard-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bf2</groupId>
            <artifactId>cos-fleetshard-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bf2</groupId>
            <artifactId>cos-fleetshard-operator</artifactId>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-container-image-jib</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-kubernetes</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-kubernetes-config</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit-assertj</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <executions>
                    <execution>
                        <id>build</id>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/annotations</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus-plugin.version}</version>
                <executions>
                    <execution>
                        <id>execute</id>
                        <phase>package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <properties>
                        <property>
                            <name>inputFile</name>
                            <value>${project.build.directory}/kubernetes/kubernetes.yml</value>
                        </property>
                        <property>
                            <name>outputFile</name>
                            <value>${project.basedir}/../etc/kubernetes/operator-camel/base/kubernetes.yml</value>
                        </property>
                    </properties>
                    <scripts>
                        <script>${project.basedir}/../cos-build-tools/src/main/resources/cleanup-generated-kubernetes-resources.groovy</script>
                    </scripts>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy</artifactId>
                        <version>${groovy.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-ant</artifactId>
                        <version>${groovy.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.bf2</groupId>
                        <artifactId>cos-build-tools</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>net.revelc.code</groupId>
                <artifactId>impsort-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>container-build</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <quarkus.container-image.push>false</quarkus.container-image.push>
                <quarkus.container-image.build>true</quarkus.container-image.build>
            </properties>
        </profile>
        <profile>
            <id>container-push</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <quarkus.container-image.push>true</quarkus.container-image.push>
                <quarkus.container-image.build>true</quarkus.container-image.build>
            </properties>
        </profile>
        <profile>
            <id>local</id>
            <activation>
                <property>
                    <name>local</name>
                </property>
            </activation>
            <build>
                <defaultGoal>quarkus:dev</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <version>${quarkus.version}</version>
                        <executions>
                            <execution>
                                <id>dev</id>
                                <goals>
                                    <goal>dev</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemProperties>
                                <quarkus.test.continuous-testing>disabled</quarkus.test.continuous-testing>
                                <quarkus.http.port>0</quarkus.http.port>
                                <quarkus.log.console.format>%d{HH:mm:ss.SSS} %-5p [%c] (%t) %s%e%n</quarkus.log.console.format>

                                <quarkus.kubernetes-config.enabled>true</quarkus.kubernetes-config.enabled>
                                <quarkus.kubernetes-config.secrets.enabled>true</quarkus.kubernetes-config.secrets.enabled>
                                <quarkus.kubernetes-config.config-maps>${quarkus.kubernetes.app-config-map}</quarkus.kubernetes-config.config-maps>
                                <quarkus.kubernetes-config.fail-on-missing-config>false</quarkus.kubernetes-config.fail-on-missing-config>
                                <quarkus.kubernetes-config.namespace>${env.KUBERNETES_NAMESPACE}</quarkus.kubernetes-config.namespace>
                                <!--
                                  The fabric8 kubernetes client is supposed to properly handle the
                                  insecure-skip-tls-verify flag from KUBECONFIG file however, it
                                  does not seem the case, see:

                                    https://github.com/java-operator-sdk/java-operator-sdk/issues/366
                                    https://github.com/fabric8io/kubernetes-client/issues/2888

                                -->
                                <quarkus.kubernetes-client.trust-certs>true</quarkus.kubernetes-client.trust-certs>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
        </profile>
        <profile>
            <id>jvm</id>
            <activation>
                <property>
                    <name>!native</name>
                </property>
            </activation>
            <properties>
                <quarkus.jib.base-jvm-image>adoptopenjdk/openjdk11:ubi-minimal</quarkus.jib.base-jvm-image>
                <quarkus.jib.jvm-entrypoint>java,-XX:+UseShenandoahGC,-Djava.util.logging.manager=org.jboss.logmanager.LogManager,-jar,/work/quarkus-run.jar</quarkus.jib.jvm-entrypoint>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>docker</name>
                </property>
            </activation>
            <properties>
                <quarkus.native.container-build>true</quarkus.native.container-build>
                <quarkus.native.container-runtime>docker</quarkus.native.container-runtime>
            </properties>
        </profile>
        <profile>
            <id>podman</id>
            <activation>
                <property>
                    <name>podman</name>
                </property>
            </activation>
            <properties>
                <quarkus.native.container-build>true</quarkus.native.container-build>
                <quarkus.native.container-runtime>podman</quarkus.native.container-runtime>
            </properties>
        </profile>
    </profiles>

</project>