
generatorOptions:
  disableNameSuffixHash: true

commonLabels:
  app: strimzi

resources:
  # For the workflow pipeline to work the first resource should be the strimzi operator image.
  - https://github.com/strimzi/strimzi-kafka-operator/releases/download/0.33.0/strimzi-cluster-operator-0.33.0.yaml
  # enable Strimzi to monitor cluster wide
  - 023-ClusterRoleBinding-strimzi-cluster-operator.yaml
  # enable Strimzi to access resources cluster wide
  - 024-ClusterRoleBinding-strimzi-cluster-operator-namespaced.yaml
patches:
  # the Strimzi-cluster-operator yaml is a convenient way to install the
  # operator, so it includes everything that is needed including the CRDs
  # however in our case, CRD and operators should be kept separated as we
  # want to get the latest CRDs, but we can have a number of operators
  # installed side by side
  - target:
      kind: CustomResourceDefinition
    patch: |-
      $patch: delete
      kind: CustomResourceDefinition
      apiVersion: apiextensions.k8s.io/v1
      metadata:
        name: ".*.strimzi.io"
  # By setting the value of the STRIMZI_NAMESPACE environment variable
  # to *, the Cluster Operator will watch resources across all namespaces
  # Enable filtering of CRs w.r.t. a specific label
  # Also Removing the env vars w.r.t. Leader Election mechanism
  - target:
      group: apps
      kind: Deployment
      name: strimzi-cluster-operator
      version: v1
    patch: |-
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: strimzi-cluster-operator
      spec:
        template:
          spec:
            containers:
            - name: strimzi-cluster-operator
              env:
              - name: STRIMZI_CUSTOM_RESOURCE_SELECTOR
                value: "cos.bf2.org/connector.operator=cos-fleetshard-operator-debezium"
              - name: STRIMZI_NAMESPACE            
                valueFrom:
                  $patch: delete  
                value: "*"
              - name: STRIMZI_LOG_LEVEL
                valueFrom:
                  configMapKeyRef:
                    name: strimzi-override-config
                    key: log.level
                    optional: true
              - name: STRIMZI_LEADER_ELECTION_ENABLED
                $patch: delete
              - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
                $patch: delete
              - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
                $patch: delete
              - name: STRIMZI_LEADER_ELECTION_IDENTITY
                $patch: delete
              resources:
                limits:
                  cpu: "1000m"
                  memory: "384Mi"
                requests:
                  cpu: "100m"
                  memory: "384Mi"
  # Removing the resources w.r.t. Leader Election mechanism
  - patch: |-
      $patch: delete
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: "strimzi-cluster-operator-leader-election"
  - patch: |-
      $patch: delete
      kind: ClusterRole
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: "strimzi-cluster-operator-leader-election"