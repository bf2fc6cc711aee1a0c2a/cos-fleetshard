name: Build Tag

on:
  push:
    tags:
      - "v*"
    paths-ignore:
      - 'LICENSE'
      - '**/.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'
      - 'etc/kubernetes/manifests/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  LANG: en_US.UTF-8
  IMAGE_REPO_USERNAME: ${{secrets.IMAGE_REPO_USERNAME}}
  IMAGE_REPO_PASSWORD: ${{secrets.IMAGE_REPO_PASSWORD}}
  OC_PROJECT: ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -e

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      imagetag: ${{ steps.images.outputs.tag }}
    strategy:
      matrix:
        kubernetes:
          - 'v1.22.1'
    steps:
      - name: 'Checkout Project'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - name: 'Validate Project'
        run: |
          TAG=$(git describe --abbrev=0 2>/dev/null)
          
          if [ -z ${TAG} ]; then
            echo "No tags to build"
            exit 1
          else
            echo "Image Tag: ${TAG}-${{ github.sha }}"
          fi
          
          echo "IMAGE_VERSION=${TAG}-${{ github.sha }}" >> $GITHUB_ENV
      - name: 'Set up JDK 11'
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github
      - name: 'Login to quay.io'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.IMAGE_REPO_USERNAME }}
          password: ${{ secrets.IMAGE_REPO_PASSWORD }}
      - name: 'SetUp KinD'
        uses: container-tools/kind-action@v1
        with:
          registry: false
          node_image: kindest/node:${{ matrix.kubernetes }}
      - name: 'SetUp Kubernetes Cluster'
        run: |
          ./etc/scripts/deploy_fleetshard_crds.sh
          ./etc/scripts/deploy_camel-k_crds.sh
          ./etc/scripts/deploy_strimzi_crds.sh
      - name: 'Build and push container images'
        run: |          
          ./etc/scripts/build.sh
          ./etc/scripts/build_image.sh cos-fleetshard-sync
          ./etc/scripts/build_image.sh cos-fleetshard-operator-camel
          ./etc/scripts/build_image.sh cos-fleetshard-operator-debezium  
      - name: 'Set output'
        id: 'images'
        run: |
          echo "::set-output name=tag::$IMAGE_VERSION"

  kustomize:
    needs: "build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        overlay:
          - "staging"
    steps:
      - name: "Checkout cos-manifests project"
        uses: actions/checkout@v2
        with:
          repository: bf2fc6cc711aee1a0c2a/cos-manifests
          token: ${{ secrets.GH_TOKEN }}
      - name: "Update Kustomize overlay ${{ matrix.overlay }}"
        uses: mikefarah/yq@master
        env:
          OVERLAY_PATH: kustomize/overlays/${{ matrix.overlay }}
          NEW_TAG: ${{needs.build.outputs.imagetag}}
        with:
          cmd: |
            yq -i ".images[0].newTag = env(NEW_TAG)" ${OVERLAY_PATH}/kustomization.yaml
            yq -i ".images[1].newTag = env(NEW_TAG)" ${OVERLAY_PATH}/kustomization.yaml
            yq -i ".images[2].newTag = env(NEW_TAG)" ${OVERLAY_PATH}/kustomization.yaml

      - name: "Create PR for ${{ matrix.overlay }}"
        env:
          OVERLAY_PATH: kustomize/overlays/${{ matrix.overlay }}
          BRANCH_NAME: "overlay.${{ matrix.overlay }}.${{needs.build.outputs.imagetag}}"
          NEW_TAG: ${{needs.build.outputs.imagetag}}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo ""
          echo "tag     : $NEW_TAG"
          echo "branch  : $BRANCH_NAME"
          echo ""

          cat ${OVERLAY_PATH}/kustomization.yaml

          git config user.email "mas-connectors@redhat.com" 
          git config user.name "mas-connectors"

          git checkout -b ${BRANCH_NAME}
          git add ${OVERLAY_PATH}
          git commit -m "Update kustomization images for overlay ${{ matrix.overlay }}" ${OVERLAY_PATH}
          git reset --hard
          git push -u origin ${BRANCH_NAME}

          # GH CLI can't find the branch on remote... needs some time :)
          sleep 15

          gh config set prompt disabled

          gh pr create \
            --fill \
            --base main \
            --title "chore(kustomize): update kustomization images overlay ${{ matrix.overlay }}" \
            --body "sha ${{ github.sha }}, overlay ${{ matrix.overlay }}, tag: ${NEW_TAG}"