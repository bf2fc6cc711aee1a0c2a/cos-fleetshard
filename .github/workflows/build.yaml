name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  LANG: en_US.UTF-8
  MAVEN_OPTS: -Xmx3000m
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -e
  IMAGE_REPO_USERNAME: ${{secrets.IMAGE_REPO_USERNAME}}
  IMAGE_REPO_PASSWORD: ${{secrets.IMAGE_REPO_PASSWORD}}
  IMAGE_REPO_HOSTNAME: ${{secrets.IMAGE_REPO_HOSTNAME}}
  IMAGE_REPO_NAMESPACE: ${{secrets.IMAGE_REPO_NAMESPACE}}
  OC_PROJECT: ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Cache m2 repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Retrieve Project Metadata
        uses: radcortez/project-metadata-action@243817f1e0f2b4df4e012fc17efc45cff166425d
        id: metadata
        with:
          metadata-file-path: '.github/project.yaml'
          local-file: true

      - name: Login to quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.IMAGE_REPO_USERNAME }}
          password: ${{ secrets.IMAGE_REPO_PASSWORD }}

      - name: Build container image and push it
        env:
          CONTAINER_VERSION: ${{steps.metadata.outputs.current-version}}
        run: |
          ./etc/scripts/build.sh
          ./etc/scripts/build_container_image.sh

      - name: Print image url
        run: echo "Image pushed to ${{secrets.IMAGE_REPO_HOSTNAME}}/${{secrets.IMAGE_REPO_NAMESPACE}}/cos-fleetshard:${{steps.metadata.outputs.current-version}}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    container: openshift/origin-cli:latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          skip_cache: "true"
          oc: "latest"
      - name: Verify OpenShift CLI tools
        run: |
          oc version
      - name: Log in and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.K8S_CLUSTER_DEV }}
          openshift_username: ${{ secrets.K8S_CLUSTER_DEV_USER }}
          openshift_password: ${{ secrets.K8S_CLUSTER_DEV_PASSWORD }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}
      - name: Create Pull Secret
        run: |
          ./etc/scripts/create_pull_secret.sh
      - name: Deploy FleetShard CRDs
        run: |
          oc apply -f etc/kubernetes/managedconnectoroperators.cos.bf2.org-v1.yml
          oc apply -f etc/kubernetes/managedconnectorclusters.cos.bf2.org-v1.yml
          oc apply -f etc/kubernetes/managedconnectors.cos.bf2.org-v1.yml
      - name: Deploy FleetShard config
        run: |
          oc create configmap cos-fleetshard-config \
               --from-file=etc/kubernetes/app-config-map/application.properties \
               --dry-run=client \
               -o yaml | kubectl apply -f -
      - name: Deploy FleetShard Operator
        run: |
          oc apply -f etc/kubernetes/kubernetes.yml
          oc rollout restart deployment/cos-fleetshard