name: Build and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - '**/.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'
      - 'etc/kubernetes/manifests/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  LANG: en_US.UTF-8
  IMAGE_REPO_USERNAME: ${{secrets.IMAGE_REPO_USERNAME}}
  IMAGE_REPO_PASSWORD: ${{secrets.IMAGE_REPO_PASSWORD}}
  IMAGE_VERSION: main
  OC_PROJECT: ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -e

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kubernetes:
        - 'v1.22.1'
    steps:
      - name: 'Checkout Project'
        uses: actions/checkout@v2
      - name: 'Set up JDK 11'
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github
      - name: 'Login to quay.io'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.IMAGE_REPO_USERNAME }}
          password: ${{ secrets.IMAGE_REPO_PASSWORD }}
      - name: 'SetUp KinD'
        uses: container-tools/kind-action@v1
        with:
          registry: false
          node_image: kindest/node:${{ matrix.kubernetes }}
      - name: 'SetUp Kubernetes Cluster'
        run: |
          ./etc/scripts/deploy_fleetshard_crds.sh
          ./etc/scripts/deploy_camel-k_crds.sh
          ./etc/scripts/deploy_strimzi_crds.sh
      - name: 'Build and push container images'
        run: |
          ./etc/scripts/build.sh
          ./etc/scripts/build_image.sh cos-fleetshard-sync
          ./etc/scripts/build_image.sh cos-fleetshard-operator-camel
          ./etc/scripts/build_image.sh cos-fleetshard-operator-debezium

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    container: openshift/origin-cli:latest
#    steps:
#      - name: 'Checkout Project'
#        uses: actions/checkout@v2
#      - name: 'Install OpenShift CLI tools'
#        uses: redhat-actions/openshift-tools-installer@v1
#        with:
#          source: "mirror"
#          skip_cache: "true"
#          oc: "latest"
#      - name: 'Verify OpenShift CLI tools'
#        run: |
#          oc version
#          kubectl version
#      - name: 'Log-in to OpenShift cluster and set context'
#        uses: redhat-actions/oc-login@v1
#        with:
#          openshift_server_url: ${{ secrets.K8S_CLUSTER_DEV }}
#          openshift_token: ${{ secrets.K8S_CLUSTER_DEV_TOKEN }}
#          insecure_skip_tls_verify: false
#          namespace: ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}
#      - name: 'Deploy FleetShard CRDs'
#        run: |
#          ./etc/scripts/deploy_fleetshard_crds.sh
#      - name: 'Deploy FleetShard'
#        env:
#          KUSTOMIZE_PROFILE: ${{ secrets.KUSTOMIZE_PROFILE }}
#        run: |
#          kubectl delete mctr --all -n ${OC_PROJECT}
#          ./etc/scripts/deploy_fleetshard.sh